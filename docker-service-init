#!/bin/sh
### BEGIN INIT INFO
# Provides:          <SERVICE>
# Required-Start:    docker
# Required-Stop:     docker
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Description:       <DESCRIPTION>
### END INIT INFO

CONTAINER=<CONTAINER>

case "$1" in
  start)
    ### BEGIN PRE_START_SCRIPT ###
    ###  END  PRE_START_SCRIPT ###
    docker $* $CONTAINER
    ### BEGIN POST_START_SCRIPT ###
    ###  END  POST_START_SCRIPT ###
    ;;
  stop)
    ### BEGIN PRE_STOP_SCRIPT ###
    ###  END  PRE_STOP_SCRIPT ###
    docker $* $CONTAINER
    ### BEGIN POST_STOP_SCRIPT ###
    ###  END  POST_STOP_SCRIPT ###
    ;;
  restart)
    ### BEGIN PRE_RESTART_SCRIPT ###
    ###  END  PRE_RESTART_SCRIPT ###
    docker $* $CONTAINER
    ### BEGIN POST_RESTART_SCRIPT ###
    ###  END  POST_RESTART_SCRIPT ###
    ;;
  pause)
    ### BEGIN PRE_PAUSE_SCRIPT ###
    ###  END  PRE_PAUSE_SCRIPT ###
    docker $* $CONTAINER
    ### BEGIN POST_PAUSE_SCRIPT ###
    ###  END  POST_PAUSE_SCRIPT ###
    ;;
  unpause)
    ### BEGIN PRE_UNPAUSE_SCRIPT ###
    ###  END  PRE_UNPAUSE_SCRIPT ###
    docker $* $CONTAINER
    ### BEGIN POST_UNPAUSE_SCRIPT ###
    ###  END  POST_UNPAUSE_SCRIPT ###
    ;;
  wait|attach|commit|diff|export|inspect|kill|logs|rm)
    docker $* $CONTAINER
    ;;
  cp)
    docker cp $CONTAINER:$2 $3
  ;;
  port)
    docker port $CONTAINER $2
  ;;
  top)
    if [ -z $2 ]
    then
      docker top $CONTAINER
    else
      shift
      docker top $CONTAINER ps $*
    fi
  ;;
  *)
    echo "Usage: $0 {start|stop|restart|pause|unpause|wait|attach|commit|diff|export|inspect|kill|logs|rm|cp|port|top}"
esac
